use std::collections::{HashMap, HashSet};

fn main() {
    part1();
}

fn part1() {
    let mut max_x = None;
    let mut max_y = None;
    let mut antennas: HashMap<char, Vec<(i64, i64)>> = HashMap::new();
    let mut antinodes: HashSet<(i64, i64)> = HashSet::new();

    for (y, line) in input().trim().lines().enumerate() {
        max_y = Some(y);
        for (x, char) in line.trim().chars().enumerate() {
            max_x = Some(x);

            if char != '.' {
                let entry = antennas.entry(char).or_default();
                entry.push((x as i64, y as i64));
            }
        }
    }

    let max_x = max_x.unwrap() as i64;
    let max_y = max_y.unwrap() as i64;

    for (_, positions) in antennas {
        for i in 0..positions.len() {
            let position = positions[i];
            for other in &positions[i + 1..] {
                let diff = (other.0 - position.0, other.1 - position.1);

                antinodes.insert((other.0 + diff.0, other.1 + diff.1));
                antinodes.insert((position.0 - diff.0, position.1 - diff.1));
            }
        }
    }

    let result = antinodes
        .iter()
        .filter(|(x, y)| *x >= 0 && *x <= max_x && *y >= 0 && *y <= max_y)
        .count();
    println!("Part 1 is {result}");
}

fn example() -> &'static str {
    "
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
    "
}

fn input() -> &'static str {
    "
...............................s..................
..................s..............q.............p..
.....a............................................
........c......Y.......Q..........................
............................................4.....
........Y.........y............m..........4.......
......................Y...s..........S............
.........................................S........
...............N.............y....................
...........a.......y..................1...........
................................................S.
...c........k.............q....t............S.....
.............................qM...................
........a.........................................
..................................................
..................................................
..c..........k...Q..q....P........................
5.................Q...................8...........
......yc..........................................
........................E............4............
.........6........................u..p.....4......
.........5.............P..n......1.........N......
6..............................1.........J.t......
..6..................................3.u..t.....p.
....5...k..........................u..............
.......................E..................u....x..
..................E.................x.............
...k..................P.............3.............
...........0.....9.5...........E.........31e....N.
......0.................................N.........
.................CU.....................t....x....
......7....................e......................
....0..........K......C...........................
.....6....j......M............................J...
......K.................................p.........
.....9........................U...................
............................3....n................
.............K.........2.....C..................x.
....................P........UJ...................
.....0......X...C.........T..............U........
.......M.....8j....7.............2........Q.......
9...............K.................................
....e.....8.........................2.A.m.........
..e......8.........s...n..........................
.....................................T..nm........
...................X............2.........m......A
......................X..j....................T...
.........7..M......j.............T................
....9...7....................................A....
..........................................A.......
    "
}
